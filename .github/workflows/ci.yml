name: siralim-ultimate-api-ci
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the stack
        run: ./commands/dev-bootstrap
      - name: Lint Check
        run: ./commands/lint-check
      - name: Test
        run: ./commands/test
  ecr:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}

      - name: PUBLIC, Build, tag, and push the images to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        run: |
          # Build a docker container and push it to ECR 
          NGINX_ECR_REPOSITORY=${ECR_REPOSITORY}-nginx
          LATEST_NGINX_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-nginx-latest
          GIT_SHA_NGINX_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-nginx-${GITHUB_SHA}
          docker build -t $NGINX_ECR_REPOSITORY ./nginx

          echo "Pushing NGINX ${GIT_SHA_NGINX_TAG}"
          docker tag $NGINX_ECR_REPOSITORY:latest $GIT_SHA_NGINX_TAG
          docker push $GIT_SHA_NGINX_TAG

          echo "Pushing NGINX ${LATEST_NGINX_TAG}"
          docker tag $NGINX_ECR_REPOSITORY:latest $LATEST_NGINX_TAG
          docker push $LATEST_NGINX_TAG

          GIT_BRANCH=${GITHUB_REF##*/}
          LATEST_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-latest
          GIT_SHA_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-${GITHUB_SHA}

          echo "Building ${GIT_SHA_TAG}"
          docker build -t $ECR_REPOSITORY .

          echo "Pushing ${GIT_SHA_TAG}"
          docker tag $ECR_REPOSITORY:latest $GIT_SHA_TAG
          docker push $GIT_SHA_TAG
          
          echo "Pushing ${LATEST_TAG}"
          docker tag $ECR_REPOSITORY:latest $LATEST_TAG
          docker push $LATEST_TAG

      - name: Login to Private ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.AWS_ECR_REGISTRY }}
          username: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}

      - name: Private, Build, tag, and push the images to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        run: |
          # Build a docker container and push it to ECR 
          NGINX_ECR_REPOSITORY=${ECR_REPOSITORY}-nginx
          LATEST_NGINX_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-nginx-latest
          GIT_SHA_NGINX_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-nginx-${GITHUB_SHA}
          docker build -t $NGINX_ECR_REPOSITORY ./nginx

          echo "Pushing NGINX ${GIT_SHA_NGINX_TAG}"
          docker tag $NGINX_ECR_REPOSITORY:latest $GIT_SHA_NGINX_TAG
          docker push $GIT_SHA_NGINX_TAG

          echo "Pushing NGINX ${LATEST_NGINX_TAG}"
          docker tag $NGINX_ECR_REPOSITORY:latest $LATEST_NGINX_TAG
          docker push $LATEST_NGINX_TAG

          GIT_BRANCH=${GITHUB_REF##*/}
          LATEST_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-latest
          GIT_SHA_TAG=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GIT_BRANCH}-${GITHUB_SHA}

          echo "Building ${GIT_SHA_TAG}"
          docker build -t $ECR_REPOSITORY .

          echo "Pushing ${GIT_SHA_TAG}"
          docker tag $ECR_REPOSITORY:latest $GIT_SHA_TAG
          docker push $GIT_SHA_TAG
          
          echo "Pushing ${LATEST_TAG}"
          docker tag $ECR_REPOSITORY:latest $LATEST_TAG
          docker push $LATEST_TAG
            